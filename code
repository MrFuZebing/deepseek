来自烧瓶进口烧瓶，要求，jsonify
进口请求
 
app=烧瓶(__name__)
DEEPSEEK_API="https://api.deepseek.com/v1/chat/completions" 
API_KEY="sk-aff08715a6c24c39bc85183894bebdd5"
 
@app。路线('/chat'，方法=['POST'])
定义聊天():
数据={
        "型号":"deepseek-r1",
        "消息":[{"角色":"用户","内容"：请求。JSON['提示']}],
        "流"：True
    }
标题={
        "授权"：f"支座{API_KEY}",
        "内容类型":"应用程序/JSON"
    }
响应=请求。邮件(DEEPSEEK_API，json=数据，headers=headers，stream=True)
返回响应。ITER_content(chunk_size=无)
div id="聊天容器">
<div v-为="消息中的消息":班级="msg.role">
    {{MSG.内容}}
</div>
<输入v-模型="inputText"@keyup。进入="SendMessage"/>
</div>
 
<script>
//Vue.js流式响应处理
异步功能streamResponse() {
Const响应=等待取来('/chat',{
方法：'POST',
页眉:{'内容类型':'应用程序/约翰逊},
主体：JSON。使字符串化({促使：这.inputText}) 
  });
  
Constreader=响应。身体.getReader();
在……期间(正确) {
Const{完成，值}=等待阅读器。读();
    如果(已完成)打破;
    这.消息[这.消息.长度-1].内容+=
      新的TextDecoder() TextDecoder(价值);
  }
}
</script>
from langchain_community.vectorstores  import FAISS 
from langchain_deepseek import DeepSeekEmbeddings 
 
embeddings = DeepSeekEmbeddings(model="text-embedding-002")
vector_store = FAISS.from_documents(docs,  embeddings)
  
